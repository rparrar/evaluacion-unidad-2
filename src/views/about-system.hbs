{{> navbar}}
<div class="row justify-content-center">
  <div class="col-md-12">
    <h1 class="text-center title-section">ACERCA DEL SISTEMA</h2>
  </div>
</div>
<div class="row justify-content-center my-3">
  <div class="col-md-12 text-center">
    <img src="/img/nodejs.png" class="image-about-system">
    <img src="/img/express.png" class="image-about-system">
    <img src="/img/handlebars.jpg" class="image-about-system">
    <img src="/img/html5.png" class="image-about-system">
    <img src="/img/css3.png" class="image-about-system">
    <img src="/img/bootstrap.webp" class="image-about-system">
  </div>
</div>


<div class="row justify-content-center">
  <div class="col-md-8 text-left">
    <div class="alert alert-primary">
      <h3>Evaluación de unidad 2 CIISA</h3>
      <ul>
        <li>Este proyecto, utiliza el patrón MVC  (modelo-vista-controlador)</li>
        <li>Se utilizó para el backend NODE.JS, junto al framework EXPRESS</li>
        <li>Para el diseño, se utilizó el motor de plantillas HANDLEBARS, escrito en HTML5, con apoyo de CSS3, y su framework BOOTSTRAP</li>
        <li>Para la BDD, su utilizó mysql, con el servicio externo de Planetscale (https://planetscale.com/)</li>
      </ul>
      <h3>EXTRAS agregados a la aplicación</h3>
      <ul>
        <li>Diseño responsivo, gracias a la libreria css Booststrap</li>
        <li>Se agregan fuentes personalizadas de google fonts, para la parte estetica del sistema.</li>
        <li>Se logra "pintar" de un color especial, el link activo de manera dinámica en la barra de menús, dependiendo de la url donde 
          se encuentre el usuario, esto se logra pasando una variable desde el controlador, la que se valida en el partial header.hbs</li>
        <li>En la zona de agregar vehiculo, se agrega una tabla con imagenes ya buscadas en internet para agilizar las pruebas de ingreso</li>
        <li>Se da la posibilidad de entrar a los detalles del vehiculo, clickeando en la imagen de este, o en el botón VER DETALLES</li>
        <li>Se registra un helper personalizado, el que logra "contar" los items y agregarlo al titulo de cada vehiculo</li>
        <li>Mediante la ayuda de otro helper personalizado, se logran formatar los números para que sean desplegados con separadores de miles</li>
        <li>Se pasa una variable, que cuenta la cantidad total de vehiculos en la base de datos, para mostrarla en la vista HOME</li>
        <li>En el formulario de creación de vehiculos, se agrega una tabla con enlaces listos para evitar ir a buscar imagenes a Google</li>
        <li>Se logra agregar el titulo de cada sección del sistema a la pestaña del navegador</li>
        <li>Se hacen validaciones, sólo a nivel front, mediante validaciones nativas de html5, para los campos obligatorios y restricción de largo</li>
        <li>Quedan un par de campos sin validar, cosa de que si el sistema da error 500, se pueda apreciar la página estática correspondiente al error del servidor</li>
      </ul> 
    </div>
  </div>
</div>


<div class="row justify-content-center">
  <div class="col-md-6">
    {{> backhome}}
  </div>
</div>